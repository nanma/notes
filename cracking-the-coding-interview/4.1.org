#+TITLE:     Cracking the Coding Interviews-Q4.1
#+AUTHOR:    马楠（nxmanan#gmail.com）
#+EMAIL:     nxmanan#gmail.com
#+DATE:      2014-12-02
#+DESCRIPTION: Cracking the Coding Interview笔记
#+KEYWORDS: Algorithm
#+LANGUAGE: en
#+OPTIONS: H:3 num:nil toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS: TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+OPTIONS: ^:{} #不对下划线_进行直接转义
#+INFOJS_OPT: view:nil toc: ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: no-export
#+HTML_LINK_HOME: http://wiki.manan.org
#+HTML_LINK_UP: ./interview-questions.html
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../style/emacs.css" />

* 题目
** 原文
#+BEGIN_QUOTE
Implement a function to check if a binary tree is balanced. For the purposes of this question, a balanced tree is defined to be a tree such that the heights of the two subtrees of any node never differ by more than one.
#+END_QUOTE

** 译文
#+BEGIN_QUOTE
实现一个函数检查一个二叉树是否是平衡的。本题中，平衡树的定义是任意节点的两颗子树的高度相差不超过1。
#+END_QUOTE

* 解答
1. 定义计算树节点高度的函数，递归检查平衡性
   - 由于节点高度重复计算，复杂度O(N^2)
2. 计算高度过程中，已经得到了任意节点的左右子树高度，可以直接判断是否平衡
   - 不再重复计算，复杂度O(N)

