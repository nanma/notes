#+TITLE:     VIII. Interview Questions
#+AUTHOR:    马楠（nxmanan#gmail.com）
#+EMAIL:     nxmanan#gmail.com
#+DATE:      2014-11-26
#+DESCRIPTION: Cracking the Coding Interview笔记
#+KEYWORDS: Algorithm
#+LANGUAGE: en
#+OPTIONS: H:3 num:nil toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS: TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+OPTIONS: ^:{} #不对下划线_进行直接转义
#+INFOJS_OPT: view:nil toc: ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: no-export
#+HTML_LINK_HOME: http://manan.org
#+HTML_LINK_UP: ./cracking-the-coding-interview.html
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../style/emacs.css" />

* Data Structures

** Chapter 1 | Arrays and Strings
[[./1.1.html][1.1 Implement an algorithm to determine if a string has all unique characters. What if you can not use additional data structures?]]

[[./1.2.html][1.2 Write code to reverse a C-Style String. (C-String means that “abcd” is represented as five characters, including the null character.)]]

[[./1.3.html][1.3 Given two strings, write a method to decide if one is a permutation of the other.]]

[[./1.4.html][1.4 Write a method to replace all spaces in a string with '%20'. You may assume that the string has sufficient space at the end of the string to hold the additional characters, and that you are given the "true" length of the string. (Note: if implementing in Java, please use a character array so that you can perform this operation in place.)]]

[[./1.5.html][1.5 Implement a method to perform basic string compression using the counts of repeated characters. For example, the string aabcccccaaa would become a2blc5a3. If the "compressed" string would not become smaller than the original string, your method should return the original string]]

[[./1.6.html][1.6 Given an image represented by an NxN matrix, where each pixel in the image is 4 bytes, write a method to rotate the image by 90 degrees. Can you do this in place?]]

[[./1.7.html][1.7 Write an algorithm such that if an element in an MxN matrix is 0, its entire row and column are set to 0.]]

[[./1.8.html][1.8 Assume you have a method is Substring which checks if one word is a substring of another. Given two strings, s1 and s2, write code to check If s2 is a rotation of s1 using only one call to isSubstring (e.g., "waterbottLe" is a rotation of "erbot-tLewat").]]
** Chapter 2 | Linked Lists
链表相关技巧：

1. 双指针移动
2. 递归方法

[[./2.1.html][2.1 Write code to remove duplicates from an unsorted linked list. FOLLOW UP: How would you solve this problem if a temporary buffer is not allowed?]]

[[./2.2.html][2.2 Implement an algorithm to find the kth to last element of a singly linked list.]]

[[./2.3.html][2.3 Implement an algorithm to delete a node in the middle of a singly linked list, given only access to that node.]]

[[./2.4.html][2.4 Write code to partition a linked list around a value x, such that all nodes less than x come before alt nodes greater than or equal to x.]]

[[./2.5.html][2.5 You have two numbers represented by a linked list, where each node contains a single digit. The digits are stored in reverse order, such that the 1 's digit is at the head of the list. Write a function that adds the two numbers and returns the sum as a linked list.]]

[[./2.6.html][2.6 Given a circular linked list, implement an algorithm which returns the node at the beginning of the loop.]]

[[./2.7.html][2.7 Implement a function to check if a linked list is a palindrome.]]

** Chapter 3 | Stacks and Queues
实现：栈和队列都用链表实现。

[[./3.1.html][3.1 Describe how you could use a single array to implement three stacks.]]

[[./3.2.html][3.2 How would you design a stack which, in addition to push and pop, also has a function min which returns the minimum element? Push, pop and min should all operate in 0(1) time.]]

[[./3.3.html][3.3 Imagine a (literal) stack of plates. If the stack gets too high, it might topple. Therefore, in real life, we would likely start a new stack when the previous stack exceeds some threshold. Implement a data structure SetOfStacks that mimics this. SetOfStacks should be composed of several stacks and should create a new stack once the previous one exceeds capacity. SetOfStacks.push() and SetOfStacks.pop() should behave identically to a single stack (that is, pop() should return the same values as it would if there were just a single stack). FOLLOW UP:Implement a function popAt(int index) which performs a pop operation on a specific sub-stack.]]

[[./3.4.html][3.4 In the classic problem of the Towers of Hanoi, you have 3 towers and N disks of different sizes which can slide onto any tower. The puzzle starts with disks sorted in ascending order of size from top to bottom (i.e., each disk sits on top of an even larger one). You have the following constraints:
(1) Only one disk can be moved at a time.
(2) A disk is slid off the top of one tower onto the next rod.
(3) A disk can only be placed on top of a larger disk.
Write a program to move the disks from the first tower to the last using Stacks.]]

[[./3.5.html][3.5 Implement a MyQueue class which implements a queue using two stacks.]]

[[./3.6.html][3.6 Write a program to sort a stack in ascending order (with biggest items on top). You may use at most one additional stack to hold items, but you may not copy the elements into any other data structure (such as an array). The stack supports the following operations: push, pop, peek, and isEmpty.]]

[[./3.7.html][3.7 An animal shelter holds only dogs and cats, and operates on a strictly "first in, first out" basis. People must adopt either the "oldest" (based on arrival time) of all animals at the shelter, or they can select whether they would prefer a dog or a cat (and will receive the oldest animal of that type). They cannot select which specific animal they would like. Create the data structures to maintain this system and implement operations such as enqueue, dequeueAny, dequeueDog and dequeueCat. You may use the built-in LinkedList data structure.]]

** Chapter 4 | Trees and Graphs
*** 需要问清楚的问题：
1. 二叉树 vs. 二叉搜索树
2. 平衡 vs. 非平衡
3. 满(Full)和完全(Complete)
*** 二叉树遍历
三种顺序
*** 树的平衡：红黑树和AVL树
应熟悉平衡树操作的复杂度和大概操作，细节问题在面试中一半不会出现。
*** Trie树（字典树；单词查找树）
*** 图的遍历
- DFS
  如果项访问图的每一个节点，或者要访问每一个节点直到找到寻找的任何内容，则DFS是最容易的做法
- BFS
  使用队列实现，实现略复杂，但是能找到最短路径


[[./4.1.html][4.1 Implement a function to check if a binary tree is balanced. For the purposes of this question, a balanced tree is defined to be a tree such that the heights of the two subtrees of any node never differ by more than one.]]

[[./4.2.html][4.2 Given a directed graph, design an algorithm to find out whether there is a route between two nodes.]]

[[./4.3.html][4.3 Given a sorted (increasing order) array with unique integer elements, write an algorithm to create a binary search tree with minimal height.]]

[[./4.4.html][4.4 Given a binary tree, design an algorithm which creates a linked list of all the nodes at each depth (e.g., if you have a tree with depth D, you'll have D linked lists).]]

[[./4.5.html][4.5 Implement a function to check if a binary tree is a binary search tree.]]

[[./4.6.html][4.6 Write an algorithm to find the 'next' node (i.e., in-order successor) of a given node in a binary search tree. You may assume that each node has a link to its parent.]]

[[./4.7.html][4.7 Design an algorithm and write code to find the first common ancestor of two nodes in a binary tree. Avoid storing additional nodes in a data structure. NOTE: This is not necessarily a binary search tree.]]

[[./4.8][4.8 You have two very large binary trees: T1, with millions of nodes, and T2, with hundreds of nodes. Create an algorithm to decide if T2 is a subtree of T1. A tree T2 is a subtree of T1 if there exists a node n in T1 such that the subtree of n is identical to T2. That is, if you cut off the tree at node n, the two trees would be identical.]]

[[./4.9.html][4.9 You are given a binary tree in which each node contains a value. Design an algorithm to print all paths which sum to a given value. The path does not need to start or end at the root or a leaf.]]


* Concetps and Algorithms
** Chapter 5 | Bit Manipulation
*** Bit Facts and Tricks
*** Common Bit Tasks: Get, Set, Clear, and Update Bit

[[./5.1.html][5.1 You are given two 32-bit numbers, N and M, and two bit positions, i and j. Write a method to insert M into N such that M starts at bit j and ends at bit i. You can assume that the bits j through i have enough space to fit all of M. That is, if M= 10011, you can assume that there are at least 5 bits between j and i. You would not, for example, have j=3 and i=2, because M could not fully fit between bit 3 and bit 2. EXAMPLE: Input: N = 16000000000, M = 10011, i = 2, j = 6 Output: N = 10001001100.]]

[[./5.2.html][5.2 Given a real number between 0 and 7 (e.g., 0.72) that is passed in as a double, print the binary representation. If the number cannot be represented accurately in binary with at most 32 characters, print "ERROR."]]

[[./5.3.html][5.3 Given a positive integer, print the next smallest and the next largest number that have the same number of 7bits in their binary representation.]]

[[./5.4.html][5.4 Explain what the following code does: ((n & (n-1)) == 0).]]

[[./5.5.html][5.5 Write a function to determine the number of bits required to convert integer A to integer B.]]

[[./5.6.html][5.6 Write a program to swap odd and even bits in an integer with as few instructions as possible(e.g., bit 0 and bit 1 are swapped, bit 2 and bit 3are swapped, and soon).]]

[[./5.7.html][5.7 An array A contains all the integers from 0 through n, except for one number which is missing. In this problem, we cannot access an entire integer in A with a single operation. The elements of A are represented in binary, and the only operation we can use to access them is "fetch the j th bit of A(i)," which takes constant time. Write code to find the missing integer. Can you do it in O(n) time?]]

[[./5.8.html][5.8 A monochrome screen is stored as a single array of bytes, allowing eight consecutive pixels to be stored in one byte. The screen has width w, where w is divisible by 8 (that is, no byte will be split across rows). The height of the screen, of course, can be derived from the length of the array and the width. Implement a function drawHorizontalLine(byte() screen, int width, int x1, int x2, int y) which draws a horizontal line from (x1, y) to (x2, y)]]

** Chapter 6 | Brain Teasers
** Chapter 7 | Mathematics and Probability
** Chapter 8 | Object-Oriented Design
** Chapter 9 | Recursing and Dynamic Programming
[[./9.1.html][9.1 A child is running up a staircase with n steps, and can hop either 1 step, 2 steps, or 3 steps at a time. Implement a method to count how many possible ways the child can run up the stairs.]]

[[./9.2.html][9.2 Imagine a robot sitting on the upper left corner of an X by Y grid. The robot can only move in two directions: right and down. How many possible paths are there for the robot to go from (0, 0) to (X, Y) ? FOLLOW UP: Imagine certain spots are "off limits," such that the robot cannot step on them. Design an algorithm to find a path for the robot from the top left to the bottom right.]]

[[./9.3.html][9.3 A magic index in an array A(l.. .n-l) is defined to be an index such that A(i) = i. Given a sorted array of distinct integers, write a method to find a magic index, if one exists, in array A. FOLLOW UP: What if the values are not distinct?]]

[[./9.4.html][9.4 Write a method to return all subsets of a set.]]

[[./9.5.html][9.5 Write a method to compute all permutations of a string.]]

[[./9.6.html][9.6 Implement an algorithm to print all valid (i.e., properly opened and closed) combinations of n-pairs of parentheses.]]

[[./9.7.html][9.7 Implement the "paint fill" function that one might see on many image editing programs. That is, given a screen (represented by a two-dimensional array of colors), a point, and a new color, fill in the surrounding area until the color changes from the original color.]]

[[./9.8.html][9.8 Given an infinite number of quarters (25 cents), dimes (10 cents), nickels (5 cents) and pennies (1 cent), write code to calculate the number of ways of representing n cents.]]
