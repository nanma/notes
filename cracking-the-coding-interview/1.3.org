#+TITLE:     Cracking the Coding Interviews-Q1.3
#+AUTHOR:    马楠（nxmanan#gmail.com）
#+EMAIL:     nxmanan#gmail.com
#+DATE:      2014-11-27
#+DESCRIPTION: Cracking the Coding Interview笔记
#+KEYWORDS: Algorithm
#+LANGUAGE: en
#+OPTIONS: H:3 num:nil toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS: TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+OPTIONS: ^:{} #不对下划线_进行直接转义
#+INFOJS_OPT: view:nil toc: ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: no-export
#+HTML_LINK_HOME: http://wiki.manan.org
#+HTML_LINK_UP: ./interview-questions.html
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../style/emacs.css" />

* 题目
** 原文
Given two strings, write a method to decide if one is a permutation of the other.

** 译文
给定两个字符串，写一个方法判断其中一个是否是另一个的重排。

* 解答
首先搞清楚是否区分大小写，是否考虑空格。

如果字符串的长度不同，则肯定不是重排，可以用来优化。

两种方法：
1. 排序后比较字符串
2. 统计字符个数（假设为ascii码）

**  相关问题
如果不是重排，是字符串的旋转？
  - 如果s1能旋转成s2，那么s1s1拼接成的字符串一定包含s2。
